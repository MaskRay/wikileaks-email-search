doctype html
html
  head
    link rel='stylesheet' type='text/css' href='//cdnjs.cloudflare.com/ajax/libs/semantic-ui/2.2.6/semantic.min.css'
    style
      |
        .table-header {
          font-weight: bold;
        }
        html {
          font-family: sans-serif;
        }
        .subject {
          color: blue;
        }
  body
    .ui.main.container#app
      h1.ui.center.aligned.header WikiLeaks Email Search
      form.ui.form
        .two.fields
          .field
            label Subject
            input name='subject' v-model='subject'
          .field
            label Body
            input name='term' v-model='term'
        .two.fields
          .field
            label From
            input name='from' v-model='from'
          .field
            label To
            input name='to' v-model='to'
        .ui.button v-on:click='search' Search

      .ui.middle.aligned.divided.list#result
        /.item
          img.ui.avatar.image src='a.png'
          .content
            |
              test0
        /.item
          img.ui.avatar.image src='a.png'
          .content
            |
              test1
        .ui.grid.container.table-header
          .seven.wide.column Subject
          .three.wide.column Date
          .three.wide.column From
          .three.wide.column To
        .item v-for='item in result'
          .content
            .ui.accordion
              .active.title
                i.dropdown.icon
                /.ui.horizontal.list
                  .item
                    .content = '{{item.subject}}'
                  .item
                    .content = '{{item.from}}'
                  .item
                    .content = '{{item.to}}'
                .ui.grid.container
                  .seven.wide.column.subject = '{{item.subject}}'
                  .three.wide.column.date = '{{item.date | formatDate}}'
                  .three.wide.column.from = '{{item.from}}'
                  .three.wide.column.to = '{{item.to}}'
              .content
                pre = '{{item.body}}'

    /.ui.styled.accordion
      .active.title
        i.dropdown.icon
        | What is a dotaaaaaa {{ message }}
      .content
        p | {{ message }}

    /input#app v-model='message'

    script src='//ajax.googleapis.com/ajax/libs/jquery/1.11.0/jquery.min.js'
    script src='//cdnjs.cloudflare.com/ajax/libs/semantic-ui/2.2.6/semantic.min.js'
    script src='//cdnjs.cloudflare.com/ajax/libs/vue/2.0.3/vue.min.js'
    script
      |
        $(document).ready(() => {
          $('.ui.dropdown').dropdown()
          $('.ui.accordion').accordion()
        })
        $('.button').on('submit', e => e.preventDefault())
        $('form').on('submit', () => console.log('aaaaaaaaa'))

        Vue.filter('formatDate', function(value) {
          var d = new Date(1000 * +value)
          return d.toLocaleString()
        })
        var z = new Vue({
          el: '#app',
          data: {
            term: '',
            subject: '',
            from: '',
            to: '',

            message: 'Hello Vue.js!',
            result: [{
              body: 'body',
              subject: 'subject',
              from: 'a@aa',
              to: 'a@aa',
            }, {
              body: 'body2',
              subject: 'subject2',
              from: 'a@aa',
              to: 'a@aa',
            }, {
              body: 'body3',
              subject: 'subject3',
              from: 'a@aa',
              to: 'a@aa',
            }]
          },
          methods: {
            search: function(event) {
              console.log(this.subject)
              console.log('search', event)
              var query = {}
              query.term = this.term
              if (this.from) query.from = this.from
              if (this.to) query.to = this.to
              if (this.subject) query.subject = this.subject
              var q = Object.keys(query).map(key => encodeURIComponent(key) + "=" + encodeURIComponent(query[key])).join('&').replace(/%20/g, '+')
              console.log(q)
              fetch(`/api/query?${q}`).then(res => res.json()).then(json => {
                this.result.splice(0, this.result.length, ...json)
                console.log(this.result)
                console.log(json)
              })
            }
          }
        })
